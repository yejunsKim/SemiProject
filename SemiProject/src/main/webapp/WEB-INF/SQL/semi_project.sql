-- 1. Users 테이블
CREATE TABLE Users (
    id VARCHAR2(40),
    name VARCHAR2(30) NOT NULL,
    password VARCHAR2(200) NOT NULL,
    email VARCHAR2(200) NOT NULL,
    mobile VARCHAR2(200) NOT NULL,
    postcode VARCHAR2(5),
    address VARCHAR2(200),
    addressDetail VARCHAR2(200),
    addressExtra VARCHAR2(200),
    point NUMBER DEFAULT 0,
    grade VARCHAR2(20) DEFAULT 'bronze',
    registerday DATE DEFAULT SYSDATE,
    passwordChanged DATE DEFAULT SYSDATE,
    isDormant CHAR(1) DEFAULT 'N',
    isDeleted CHAR(1) DEFAULT 'N',
    
    CONSTRAINT PK_Users PRIMARY KEY (id),
    
    -- constraint UQ_tbl_member_email  unique(email),

    CONSTRAINT CK_Users_isDormant CHECK (isDormant IN ('Y', 'N')),
    CONSTRAINT CK_Users_isDeleted CHECK (isDeleted IN ('Y', 'N'))
);

ALTER TABLE Users
ADD CONSTRAINT UQ_Users_email UNIQUE (email);





-- 2. login_history
CREATE TABLE login_history (
    id VARCHAR2(40) NOT NULL,
    loginHistoryNo number,
    lastLogin DATE DEFAULT SYSDATE NOT NULL,
    ip VARCHAR2(45) NOT NULL,
    CONSTRAINT PK_LoginHistory PRIMARY KEY(loginHistoryNo),
    CONSTRAINT FK_LoginHistory_User FOREIGN KEY (id) REFERENCES Users(id)
);






-- 3. category
CREATE SEQUENCE category_seq;

drop sequence category_seq;

CREATE TABLE category (
    categoryNo NUMBER,
    categoryName NVARCHAR2(100) DEFAULT '기타' NOT NULL,
    categoryImagePath NVARCHAR2(255),
    CONSTRAINT PK_Category PRIMARY KEY (categoryNo)
);


-- 4. Item
CREATE SEQUENCE item_seq;

CREATE TABLE Item (
    itemNo NUMBER,
    itemName NVARCHAR2(150) NOT NULL,
    itemPhotoPath NVARCHAR2(255),
    itemInfo NVARCHAR2(500),
    price NUMBER NOT NULL,
    itemAmount NUMBER DEFAULT 0 NOT NULL,
    volume NUMBER(3) NOT NULL,
    company NVARCHAR2(50) NOT NULL,
    infoImg NVARCHAR2(255),
    fk_category_no Number,
    
    CONSTRAINT PK_Item PRIMARY KEY (itemNo),
    CONSTRAINT CK_Item_Price CHECK (price >= 0),
    CONSTRAINT CK_Item_Amount CHECK (itemAmount >= 0),
    CONSTRAINT CK_Item_Volume CHECK (volume >= 0),
    CONSTRAINT fk_category_no FOREIGN KEY (fk_category_no) REFERENCES category(categoryNo)
);

desc users;
select * from users;
desc login_history;
select * from item;
desc category;
select * from category;
desc item;
select * from item;



commit;

-- login_history 시퀀스 생성
create sequence login_history_seq
start with 1
increment by 1
nomaxvalue
nominvalue
nocycle
nocache;

-- CATEGORY 시퀀스 생성
create sequence category_seq
start with 1
increment by 1
nomaxvalue
nominvalue
nocycle
nocache;

-- ITEM_SEQ 시퀀스 생성
create sequence item_seq
start with 1
increment by 1
nomaxvalue
nominvalue
nocycle
nocache;

----------item까지 

-- 5. Cart
CREATE TABLE Cart (
    cartNo NUMBER,
    fk_users_id VARCHAR2(40) NOT NULL,
    fk_item_No NUMBER NOT NULL,
    cartAmount NUMBER(4) DEFAULT 1 NOT NULL,
    cartDate DATE DEFAULT SYSDATE,
    CONSTRAINT PK_Cart PRIMARY KEY (cartNo),
    CONSTRAINT FK_Cart_User FOREIGN KEY (id) REFERENCES Users(id) ON DELETE CASCADE,
    CONSTRAINT FK_Cart_Item FOREIGN KEY (itemNo) REFERENCES Item(itemNo)
);


-- 6. order_history
CREATE TABLE order_history (
    orderNo NUMBER,
    id VARCHAR2(40) NOT NULL,
    orderDate DATE DEFAULT SYSDATE NOT NULL,
    totalAmount NUMBER(10) NOT NULL,
    rewarded NUMBER(10) DEFAULT 0,
    CONSTRAINT PK_OrderHistory PRIMARY KEY (orderNo),
    CONSTRAINT FK_OrderHistory_User FOREIGN KEY (id) REFERENCES Users(id) ON DELETE CASCADE
);



-- 7. delivery_address
CREATE TABLE delivery_address (
    deliveryNo NUMBER NOT NULL,
    id VARCHAR2(40) NOT NULL,
    postcode VARCHAR2(5),
    address VARCHAR2(200),
    addressDetail VARCHAR2(200),
    addressExtra VARCHAR2(200),
    CONSTRAINT PK_Delivery_Address PRIMARY KEY (deliveryNo),
    CONSTRAINT FK_Delivery_User FOREIGN KEY (id) REFERENCES Users(id) ON DELETE CASCADE
);



-- 8. order_items
CREATE TABLE order_items (
    orderItemNo NUMBER,
    orderNo NUMBER NOT NULL,
    itemNo NUMBER NOT NULL,
    quantity NUMBER,
    orderPrice NUMBER,
    deliveryNo NUMBER NOT NULL,
    CONSTRAINT PK_OrderItems PRIMARY KEY (orderItemNo),
    CONSTRAINT FK_OI_Order FOREIGN KEY (orderNo) REFERENCES order_history(orderNo) ON DELETE CASCADE,
    CONSTRAINT FK_OI_Item FOREIGN KEY (itemNo) REFERENCES Item(itemNo),
    CONSTRAINT FK_OI_Delivery FOREIGN KEY (deliveryNo) REFERENCES delivery_address(deliveryNo)
);

-- 9. Reviews

CREATE TABLE Reviews (
    reviewId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    fk_id VARCHAR2(40) NOT NULL,
    fk_itemNo NUMBER NOT NULL,
    content VARCHAR2(500) NOT NULL,
    createdAt DATE DEFAULT SYSDATE,
    
    CONSTRAINT FK_Review_User FOREIGN KEY (fk_id) 
        REFERENCES Users(id) ON DELETE CASCADE,
        
    CONSTRAINT FK_Review_Item FOREIGN KEY (fk_itemNo) 
        REFERENCES Item(itemNo),
        
    CONSTRAINT UQ_Review_UserItem UNIQUE (fk_id, fk_itemNo)
);



-- 10. review_reactions
CREATE TABLE review_reactions (
    fk_id VARCHAR2(40) NOT NULL,
    fk_reviewId NUMBER NOT NULL,
    CONSTRAINT PK_ReviewReactions PRIMARY KEY (fk_id, fk_reviewId),
    CONSTRAINT FK_RR_User FOREIGN KEY (fk_id) REFERENCES Users(id) ON DELETE CASCADE,
    CONSTRAINT FK_RR_Review FOREIGN KEY (fk_reviewId) REFERENCES Reviews(reviewId)
);


---시퀀스

--cart_seq 시퀀스 
create sequence cart_seq
start with 1
increment by 1
nomaxvalue
nominvalue
nocycle
nocache;


--order_seq
create sequence order_seq
start with 1
increment by 1
nomaxvalue
nominvalue
nocycle
nocache;


--delivery_seq
create sequence delivery_seq
start with 1
increment by 1
nomaxvalue
nominvalue
nocycle
nocache;

--oi_seq (주문상세내역)
create sequence order_item_seq
start with 1
increment by 1
nomaxvalue
nominvalue
nocycle
nocache;


